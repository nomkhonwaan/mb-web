version: 2
jobs:
  install:
    docker:
    - image: circleci/node:8
    working_directory: ~/repo
    steps:
    - checkout
    - run: yarn install
    - run: yarn build-css
    - save_cache:
        paths:
        - node_modules
        key: node-{{ checksum "package.json" }}
    - persist_to_workspace:
        root: ~/repo
        paths: 
        - src
  build:
    docker:
    - image: circleci/node:8
    working_directory: ~/repo
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo
    - restore_cache:
        keys:
        - node-{{ checksum "package.json" }}
    - run: yarn build-js
    - persist_to_workspace:
        root: ~/repo
        paths: 
        - build
  test:
    docker:
    - image: circleci/node:8
    working_directory: ~/repo
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo
    - restore_cache:
        keys:
        - node-{{ checksum "package.json" }}
    - run: yarn test
  deploy_to_production:
    docker:
    - image: circleci/node:8
    working_directory: ~/repo
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo
    - restore_cache:
        keys:
        - node-{{ checksum "package.json" }}
    - run: yarn firebase use production --token=$FIREBASE_TOKEN
    - run: yarn firebase deploy --token=$FIREBASE_TOKEN
  deploy_to_staging:
    docker:
    - image: circleci/node:8
    working_directory: ~/repo
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo
    - restore_cache:
        keys:
        - node-{{ checksum "package.json" }}
    - run: yarn firebase use staging --token=$FIREBASE_TOKEN
    - run: yarn firebase deploy --token=$FIREBASE_TOKEN
  deploy_to_development:
    docker:
    - image: circleci/node:8
    working_directory: ~/repo
    steps:
    - checkout
    - attach_workspace:
        at: ~/repo
    - restore_cache:
        keys:
        - node-{{ checksum "package.json" }}
    - run: yarn firebase use development --token=$FIREBASE_TOKEN
    - run: yarn firebase deploy --token=$FIREBASE_TOKEN
workflows:
  version: 2
  test_build_and_deploy:
    jobs:
    - install
    - test:
        requires: 
        - install
    - build:
        requires:
        - test
    - hold:
        type: approval
        filters:
          branches:
            only:
            - master
    - deploy_to_production:
        requires:
        - build
        - hold
        filters:
          branches:
            only: master
    - deploy_to_staging:
        requires:
        - build
        filters:
          branches:
            only: master
    - deploy_to_development:
        requires:
        - build
        filters:
          branches:
            ignore: master
